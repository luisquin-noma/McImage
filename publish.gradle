apply plugin: 'maven-publish'
apply plugin: 'signing'

def DEBUG = false
def VERSION = '1.5.1.2'
def GROUP = 'com.arasthel'
def ARTIFACT = 'McImage'

Properties properties = new Properties()
if (project.rootProject.file('local.properties').exists()) {
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
}

static def isSnapshot(def version) {
    return version.endsWith("SNAPSHOT")
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId = GROUP
            artifactId = ARTIFACT
            version = VERSION

            if (project.plugins.hasPlugin('com.android.library')) {
                from components.release
            } else {
                from components.java
            }

            pom {
                name.set("McImage")
                description.set("McImage is a Non-invasive plugin for compress all res in your project.")
                url.set("https://github.com/luisquin-noma/McImage.git")

                scm {
                    connection.set("scm:git:git@github.com:luisquin-noma/McImage.git")
                    developerConnection.set("scm:git:ssh://git@github.com:luisquin-noma/McImage.git")
                    url.set("https://github.com/luisquin-noma/McImage.git")
                }

                licenses {
                    license {
                        name.set("Apache-2.0 License")
                        url.set("https://github.com/smallSohoSolo/McImage/blob/master/LICENSE")
                        distribution.set("repo")
                    }
                }

                developers {
                    developer {
                        id.set("smallSohoSolo")
                        name.set("smallSohoSolo")
                    }
                }
            }
        }
    }

    repositories {
        if (DEBUG) {
            maven {
                url = uri("${buildDir}/libs")
            }
        } else {
            maven {
                url = isSnapshot(VERSION) ? properties.getProperty('MAVEN_SNAPSHOT_REPO') : properties.getProperty('MAVEN_RELEASE_REPO')
                credentials {
                    username = properties.getProperty('MAVEN_USER_NAME')
                    password = properties.getProperty('MAVEN_PASSWORD')
                }
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}

afterEvaluate { project ->
    if (project.plugins.hasPlugin('com.android.library')) {
        task androidSourcesJar(type: Jar) {
            classifier = 'sources'
            from android.sourceSets.main.java.source
        }
        artifacts {
            archives androidSourcesJar
        }
    } else {
        task javadocJar(type: Jar) {
            classifier = 'javadoc'
            from javadoc
        }
        task sourcesJar(type: Jar) {
            classifier = 'sources'
            from sourceSets.main.allSource
        }
        artifacts {
            archives javadocJar, sourcesJar
        }
    }
}
